{"version":3,"sources":["Constants.js","Components/FlareTx-HomePage-Component/FlareTx-HomePage-Component.js","Services/Backend-Service.js","Components/FlareTx-Information-Component/FlareTx-Information-Header-Component/FlareTx-Information-Header-Component.js","Components/FlareTx-Utility-Components/FlareTx-ExternalLinksList-Component/Flaretx-ExternalLinksList-Component.js","Components/FlareTx-Utility-Components/FlareTx-IFrame-Component/FlareTx-IFrame-Component.js","Components/FlareTx-Utility-Components/FlareTx-KeyValue-Component/FlareTx-KeyValue-Component.js","Components/FlareTx-Utility-Components/FlareTx-Link-Component/FlareTx-Link-Component.js","Components/FlareTx-Utility-Components/FlareTx-Plotly-Component/FlareTx-Plotly-Component.js","Components/FlareTx-Utility-Components/FlareTx-Table-Component/FlareTx-Table-Component.js","Components/FlareTx-Utility-Components/FlareTx-Semicolon-Separated-List-Component/FlareTx-Semicolon-Separated-List-Component.js","Components/FlareTx-Information-Component/FlareTx-Information-Section-Component/FlareTx-Information-Section-Component.js","Components/FlareTx-ErrorPage-Component/FlareTx-ErrorPage-Component.js","Components/FlareTx-Information-Component/FlareTx-Information-Body-Component/FlareTx-Information-Body-Component.js","Components/FlareTx-Information-Component/FlareTx-SideDrawer-Component/FlareTx-Filters-Component/FlareTx-Filters-Component.js","Components/FlareTx-Information-Component/FlareTx-SideDrawer-Component/FlareTx-TF-Container-Component/FlareTx-TF-Container-Component.js","Components/FlareTx-Information-Component/FlareTx-SideDrawer-Component/FlareTx-Report-Section-Container-Component/FlareTx-Report-Section-Container-Component.js","Components/FlareTx-Information-Component/FlareTx-SideDrawer-Component/FlareTx-SideDrawer-Component.js","Components/FlareTx-Information-Component/FlareTx-Information-Component.js","Components/FlareTx-Logo-Component/FlareTx-Logo-Component.js","Assets/Images/summary.png","Components/FlareTx-Summary-Component/FlareTx-Summary-Component.js","Components/FlareTx-Summary-TF-Panel-Component/FlareTx-Summary-TF-Panel-Component.js","App.js","reportWebVitals.js","Assets/Fonts/WorkSans-VariableFont_wght.ttf","index.js"],"names":["DEFAULT_ERROR_MESSAGE","REPORT_SUBSECTIONS","VIEWS_FILTER","label","value","RATINGS_FILTER","FlareTxHomePageComponent","props","className","expanded","BackendService","getResponse","url","api","Promise","resolve","reject","axios","get","then","response","catch","error","FlareTxAverageRatingComponent","averagerRating","uniqueCount","FlareTxStarRatingComponent","Rating","name","userRating","precision","max","onChange","setUserRating","FlareTxInformaionHeaderComponent","useState","setAverageRating","userRatingUrl","setUserRatingUrl","setUniqueCount","getUserRating","useCallback","tfName","data","length","userRatings","averageRatings","useEffect","event","newValue","Date","post","status","alert","FlareTxExternalLinksListComponent","counter","externalLinksList","map","link","keys","Object","forEach","key","push","href","FlareTxIFrameComponent","isEmpty","src","title","FlareTxKeyValueComponent","FlareTxLinkComponent","FlareTxPlotlyComponent","setResponse","dataNotFound","setDataNotFound","console","log","layout","config","scrollZoom","responsive","FlareTxTableComponent","tableHead","tableBody","object","FlareTxSemicolonSeparatedListComponent","semicolonSeparatedList","val","RenderKeyData","toLowerCase","includes","dataType","RenderSectionData","ignoredKeys","keyArray","section","sectionData","FlareTxInformationSectionComponent","header","FlareTxErrorPageComponent","FlareTxInformationBodyComponent","setData","transcriptionFactor","tfFactor","hash_location","substring","node","document","getElementById","scrollIntoView","block","dat","individualSection","id","sectionName","FlareTxFiltersComponent","selectedViews","setSelectedViews","selectedRating","setSelectedRating","selectedFamily","setSelectedFamily","familyList","setFamilyList","constructFamilyList","familyName","obj","options","placeholder","filter","panelFooterTemplate","onClick","filterOnFamilyEventHandler","toggle","type","searchHandler","FlareTxTFContainerComponent","DisplayTF","tfList","factor","path","to","pathname","state","activeClassName","size","FlareTxReportSectionContainerComponent","subsections","displaySections","subsection","smooth","spy","FlaretxSideDrawerComponent","transcriptionFactorList","setTFList","displayedTF","setDisplayedTF","fetchTFList","tfWithFamilyList","Family","family","searchQery","target","filteredTF","el","indexOf","FlareTxInformationComponent","useParams","isTranscriptionFactor","setIsTranscriptionFactor","undefined","window","location","hash","FlareTxLogoComponent","FlareTxSummaryComponent","summary","alt","FlareTxSummaryTFPanelComponent","App","setExpanded","toggleSidebar","basename","exact","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.6ae533ae.chunk.js","sourcesContent":["export const DEFAULT_HOME_PAGE_MESSAGE = \"Select a transcription factor on the left panel to view the report in this space\";\nexport const DEFAULT_ERROR_MESSAGE = {\n    error_code: 404,\n    error_message: \"Page Not Found!\"\n};\n\nexport const BASEURL = 'https://ap-south-1.aws.webhooks.mongodb-realm.com/api/client/v2.0/app/application-0-jhiwj/service/';\n\nexport const ALL_FACTORS_API = 'factors/incoming_webhook/factors';\nexport const FACTOR_INFO_API = 'factors_factorSymbol/incoming_webhook/factors?arg1=';\nexport const USER_RATING_API = 'rating_userRating/incoming_webhook/rating?userId=1';\n\nexport const REPORT_SUBSECTIONS = {\n    \"About\" : \"About\",\n    \"BiologicalCharacterization\" : \"Biological Characterization\",\n    \"TargetTractability\" : \"Target Tractability\",\n    \"GeneDiseaseAssociations\" : \"Gene-Disease Associations\",\n};\n\nexport const VIEWS_FILTER = [\n    {label: 'Most Viewed First', value: 'high'},\n    {label: 'Least Viewed First', value: 'low'}\n];\n\nexport const RATINGS_FILTER = [\n    {label: 'Highly Rated First', value: 'high'},\n    {label: 'Least Rated First', value: 'low'}\n];","import './FlareTx-HomePage-Component.scss';\nimport {DEFAULT_HOME_PAGE_MESSAGE} from '../../Constants';\n\nconst FlareTxHomePageComponent = (props) => {\n    return( \n        <div className={props.expanded ? \"main-panel__expanded\" : \"main-panel\"}>\n            <div className=\"main-panel__home-page-content\">\n                {DEFAULT_HOME_PAGE_MESSAGE}\n            </div>\n            \n        </div>\n    );\n}\n\nexport default FlareTxHomePageComponent;","import axios from 'axios';\nimport { BASEURL } from '../Constants'\n\nexport class BackendService {\n\n    static getResponse = (url) => {\n        const api = `${BASEURL}${url}`;\n        return new Promise((resolve, reject) => {\n            axios.get(api)\n            .then((response) =>{\n                resolve(response)\n            })\n            .catch((error) => {\n                reject(error)\n            })\n        });\n    }\n\n}\n","import { BackendService } from '../../../Services/Backend-Service';\nimport React, {useEffect, useState, useCallback} from 'react';\nimport Rating from '@material-ui/lab/Rating';\nimport { USER_RATING_API } from '../../../Constants';\nimport './FlareTx-Information-Header-Component.scss';\nimport axios from 'axios';\n\n\nconst FlareTxAverageRatingComponent = (props) => {\n    return (\n        <div className=\"d-flex flex-row ml-2\">\n            <div className=\"d-flex p-1 average-rating-component\">\n                <div className=\"ms-1\">\n                    <i className=\"fa fa-star\" aria-hidden=\"true\"></i> \n                </div>\n                <div className=\"ms-2\">\n                    {props.averagerRating} / 10\n                </div> \n            </div>\n            <div className=\"ms-3 average-rating-component__text\">\n                Rated {props.uniqueCount} times\n                <i className=\"fa fa-question-circle ms-2\" aria-hidden=\"true\"></i>\n            </div>\n        </div>\n    );\n}\n\nconst FlareTxStarRatingComponent = (props) => {\n    return (\n        <>\n            <div className=\"d-flex\">\n                <p className=\"rate-component\">Rate this factor</p>\n            </div>\n            <div className=\"d-flex ms-4\">\n                <Rating\n                    name=\"simple-controlled\"\n                    value={props.userRating}\n                    precision={0.5}\n                    max={10}\n                    onChange={props.setUserRating}\n                />\n            </div>\n        </>\n    );\n}\n\nconst FlareTxInformaionHeaderComponent = (props) => {\n\n    const [userRating, setUserRating] = useState(0);\n    const [averagerRating, setAverageRating] = useState(0);\n    const [userRatingUrl, setUserRatingUrl] = useState('');\n    const [uniqueCount, setUniqueCount] = useState(0);\n\n    const getUserRating = useCallback(() => {\n        setUserRatingUrl(`${USER_RATING_API}&factorSymbol=${props.tfName}`);\n        BackendService.getResponse(userRatingUrl).then((value) => {\n            if (value.data.length !== 0 && value.data[0].userRatings) {\n                setUserRating(value.data[0].userRatings);\n                setAverageRating(value.data[0].averageRatings);\n                setUniqueCount(value.data[0].uniqueCount);\n            } else {\n                setUserRating(0);\n                setAverageRating(0);\n                setUniqueCount(0);\n            }\n        }).catch(() => {\n            setUserRating(0);\n        });\n    },[userRatingUrl, props.tfName]);\n\n    useEffect(() => {\n        getUserRating();\n    },[getUserRating]);\n\n    const handleRatingEvent = (event, newValue) => {\n        const url = `https://ap-south-1.aws.webhooks.mongodb-realm.com/api/client/v2.0/app/application-0-jhiwj/service/ratings/incoming_webhook/ratings?userId=1&factorSymbol=${props.tfName}&ratings=${newValue}&ts=${new Date()}`;\n        axios.post(url).then(response => {\n            if (response.status === 200)\n                getUserRating();\n        }).catch(error => {\n            alert(error);\n        })        \n    } \n\n    return (\n        <div className=\"d-flex flex-row header-content justify-content-between\" key={props.tfName}>\n            <div className=\"d-flex justify-content-around\">\n                <div className=\"d-flex\">\n                    <p>{props.tfName}</p>\n                </div>\n                <div className=\"d-flex ms-4\">\n                    <FlareTxAverageRatingComponent averagerRating={averagerRating} uniqueCount={uniqueCount}/>\n                </div>\n            </div>\n            \n            <div className=\"d-flex\">\n                <FlareTxStarRatingComponent userRating={userRating} setUserRating={handleRatingEvent} key={props.tfName}/>\n            </div>\n        </div>\n    );\n}\n\nexport default FlareTxInformaionHeaderComponent","import './FlareTx-ExternalLinksList-Component.scss';\n\nconst FlareTxExternalLinksListComponent = (props) =>{\n        \n    let counter = 0;\n    const externalLinksList = props.value.map(link => {\n        let keys = [];\n        Object.keys(link).forEach((key) =>{\n            keys.push(key)\n        })\n        return (\n            <div key={props.name}>\n                {\n                    keys.map(key => {\n                        counter++;\n                        return (\n                            <a className=\"links\" href={link[key]}>\n                                {counter}. {key}&emsp;\n                                <i className=\"fa fa-external-link links__icon\"></i>\n                            </a>\n                        );\n                    })\n                }\n            </div>\n        )\n    });\n\n    return(\n        <>\n            <div className=\"external-link-component\">\n                <div>{props.name}</div>\n                <div>\n                    {externalLinksList}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default FlareTxExternalLinksListComponent;","import './FlareTx-IFrame-Component.scss';\n\nconst FlareTxIFrameComponent = (props) => {\n\n    let isEmpty = false;\n\n    if (props.value === '') \n        isEmpty = true;\n\n    return(\n        <div className=\"d-flex justify-content-begin p-2\">\n            { isEmpty ? \n                    <>\n                    </> :\n                <div>\n                    <div className=\"p-2\">\n                        {props.name}\n                    </div>\n                    <iframe src={props.value} title=\"img\"/>\n                </div>\n            }   \n        </div>\n    );\n}\n\nexport default FlareTxIFrameComponent;","import './FlareTx-KeyValue-Component.scss'\n\nconst FlareTxKeyValueComponent = (props) =>{\n    return (\n        <div className=\"d-flex flex-row\">\n            <div className=\"p-2 d-flex keyvalue-component__keyColumn\">{props.name}</div>\n            <div className=\"p-2 d-flex keyvalue-component__valueColumn\">{props.value}</div>\n        </div>\n    );\n}\n\nexport default FlareTxKeyValueComponent;","import './FlareTx-Link-Component.scss'\n\nconst FlareTxLinkComponent = (props) => {\n    return (\n        <div className=\"d-flex flex-row\">\n                <div className=\"p-2 d-flex link-component__keyColumn\">{props.name}</div>\n                <div className=\"p-2 d-flex link-component__valueColumn\">\n                    <a  href={props.value}>\n                        <button className=\"link-buttton-component\">View</button>\n                    </a>\n                </div>\n        </div>\n    );\n}\n\nexport default FlareTxLinkComponent;","import './FlareTx-Plotly-Component.scss'\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Plot from 'react-plotly.js';\n\nconst FlareTxPlotlyComponent = (props) => {\n\n    const [url] = useState(props.value);\n    const [response, setResponse] = useState({});\n    const [dataNotFound, setDataNotFound] = useState(false);\n\n    useEffect(() => {\n        axios.get(url)\n        .then(response => {\n            console.log(url, response)\n            if (response.status === 200) {\n                if (response.data.layout) {\n                    response.data.layout['width'] = 850;\n                    if (!response.data.layout['height']) {\n                        response.data.layout['height'] = 700;\n                    }\n                }\n                setResponse(response.data)\n                setDataNotFound(false);\n            } else {\n                setDataNotFound(true);\n            }\n        }).catch(error => {\n            setDataNotFound(true);\n        });\n    },[url]) \n    \n    return (\n        <>\n            {!dataNotFound ?\n                <div className=\"\">\n                    <div className=\"p-2\">\n                        {props.name}\n                    </div>\n                    <div className=\"plotly-component\">\n                        <Plot\n                            data={response.data}\n                            layout={response.layout}\n                            config = {{\n                                scrollZoom: true,\n                                responsive: true,\n                            }}\n                        />\n                    </div>\n                </div> \n                :\n                <>\n                </>\n            }\n        </>    \n    );\n\n}\n\nexport default FlareTxPlotlyComponent;","import './FlareTx-Table-Component.scss';\n\nconst FlareTxTableComponent = (props) => {\n    if (props.value.length === 0) {\n        return(<></>);\n    }\n    \n    let keys = [];\n    Object.keys(props.value[0]).forEach((key) => {\n        keys.push(key);\n    });\n\n    const tableHead = keys.map(key => {\n        return (\n            <th key={key}>{key}</th>\n        );\n    });\n\n    let counter = 0;\n    const tableBody = props.value.map((object) => {\n        counter++;\n        return(  \n            <tr key={counter}> \n            {\n                keys.map(key => {\n                    counter++;\n                    return (\n                        <td key={counter}>{object[key]}</td>\n                    )\n                })\n            }\n            </tr>\n        );\n    });\n\n    return(\n        <table className=\"table-component\">\n            <caption>{props.name}</caption>\n            <thead>\n                <tr>\n                    {tableHead}\n                </tr>\n            </thead>\n            <tbody>\n                {tableBody}\n            </tbody>\n        </table>\n    );\n}\n\nexport default FlareTxTableComponent;\n","import './FlareTx-Semicolon-Separated-List-Component.scss'\n\nconst FlareTxSemicolonSeparatedListComponent = (props) => {\n\n    const semicolonSeparatedList = props.value.map(val => {\n        return (\n            <p className=\"list-elements\">{val};&nbsp;</p>\n        );\n    });\n\n    return (\n        <>\n            <div className=\"d-flex flex-row\">\n                <div className=\"p-2 d-flex list-component__keyColumn\">{props.name}</div>        \n                <div className=\"p-2 d-flex list-component__valueColumn\">\n                        {semicolonSeparatedList}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default FlareTxSemicolonSeparatedListComponent;","import './FlareTx-Information-Section-Component.scss';\nimport FlareTxExternalLinkListComponent \n    from '../../FlareTx-Utility-Components/FlareTx-ExternalLinksList-Component/Flaretx-ExternalLinksList-Component';\nimport FlareTxIFrameComponent \n    from '../../FlareTx-Utility-Components/FlareTx-IFrame-Component/FlareTx-IFrame-Component';\nimport FlareTxKeyValueComponent \n    from '../../FlareTx-Utility-Components/FlareTx-KeyValue-Component/FlareTx-KeyValue-Component';\nimport FlareTxLinkComponent \n    from '../../FlareTx-Utility-Components/FlareTx-Link-Component/FlareTx-Link-Component';\nimport FlareTxPlotlyComponent \n    from '../../FlareTx-Utility-Components/FlareTx-Plotly-Component/FlareTx-Plotly-Component';\nimport FlareTxTableComponent \n    from '../../FlareTx-Utility-Components/FlareTx-Table-Component/FlareTx-Table-Component';\nimport FlareTxSemicolonSeparatedListComponent \n    from '../../FlareTx-Utility-Components/FlareTx-Semicolon-Separated-List-Component/FlareTx-Semicolon-Separated-List-Component';\n\nconst RenderKeyData = (props) => {\n\n    let keys = []\n\n    Object.keys(props.data).forEach((key) => {\n        keys.push(key.toLowerCase());\n    });\n    if (!keys.includes(\"name\") || !keys.includes(\"datatype\") || !keys.includes(\"value\")) {\n        return (\n            <> </>\n        );\n    }\n    if (props.data.dataType === \"keyValue\") {\n        return (\n            <FlareTxKeyValueComponent name={props.data.name} value={props.data.value}/>\n        );\n    } else if (props.data.dataType === \"externalLink\") {\n        return (\n            <FlareTxLinkComponent name={props.data.name} value={props.data.value}/>\n        );\n    }  else if (props.data.dataType === \"table\") {\n        return(\n            <FlareTxTableComponent name={props.data.name} value={props.data.value} />\n        );     \n    } else if (props.data.dataType === \"plotlyObject\") {\n        return (\n            <FlareTxPlotlyComponent name={props.data.name} value={props.data.value}/>\n        );\n    } else if(props.data.dataType === \"externalLinksList\") {\n        return(\n            <FlareTxExternalLinkListComponent name={props.data.name} value={props.data.value}/>\n        );\n    } else if(props.data.dataType === \"inLineList\") {\n        return(\n            <FlareTxSemicolonSeparatedListComponent name={props.data.name} value={props.data.value}/>\n        );\n    } else if(props.data.dataType === \"interactiveImage\" || props.data.dataType === \"staticImage\") {\n        return(\n            <FlareTxIFrameComponent name={props.data.name} value={props.data.value}/>\n        );\n    } else {\n        return (\n            <>\n                {/* <div>Data Type not accepted</div> */}\n            </>\n        );\n    }\n}\n\nconst RenderSectionData = (props) => {\n    \n    let ignoredKeys = [];\n    let keyArray = [];\n\n    Object.keys(props.section).forEach((key) => {\n        if (key === 'header' || key === 'order') {\n            ignoredKeys.push(key);\n        } else {\n            keyArray.push(key);\n        }\n    });\n\n    const sectionData = keyArray.map(key => {\n        return (\n            <RenderKeyData key={key} data={props.section[key]}/>\n        );\n    })\n\n    return(\n        <>\n            {sectionData}\n        </>              \n    );\n}\n\nconst FlareTxInformationSectionComponent = (props) => {\n    return(\n        <>\n            <div className=\"section-component\">\n                <p className=\"section-component__heading\">{props.section.header}</p>\n                <RenderSectionData section={props.section}/>\n            </div>\n        </>\n    );\n}\n\nexport default FlareTxInformationSectionComponent;","import './FlareTx-ErrorPage-Component.scss';\nimport {DEFAULT_ERROR_MESSAGE} from '../../Constants';\n\nconst FlareTxErrorPageComponent = (props) => {\n    return( \n        <div className={props.expanded ? \"main-panel__expanded\" : \"main-panel\"}>\n            <div className=\"main-panel__error-content\">\n                <p className=\"main-panel__error-code\">{DEFAULT_ERROR_MESSAGE.error_code}</p>\n                <p>{DEFAULT_ERROR_MESSAGE.error_message}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default FlareTxErrorPageComponent;","import './FlareTx-Information-Body-Component.scss'\nimport {BackendService} from '../../../Services/Backend-Service'\nimport { FACTOR_INFO_API } from '../../../Constants';\nimport FlareTxInformationSectionComponent from '../FlareTx-Information-Section-Component/FlareTx-Information-Section-Component';\nimport FlareTxErrorPageComponent from '../../FlareTx-ErrorPage-Component/FlareTx-ErrorPage-Component';\nimport React, { useEffect, useState } from 'react';\n\nconst FlareTxInformationBodyComponent = (props) => {\n\n    const [data, setData] = useState([])\n    const [dataNotFound, setDataNotFound] = useState(false)\n    const [tfFactor] = useState(props.transcriptionFactor)\n\n    useEffect(() => {\n        const url = `${FACTOR_INFO_API}${tfFactor}`;\n        BackendService.getResponse(url).then((value) => {\n            if (value.data.length === 0) {\n                setDataNotFound(true);\n            } else {\n                setData(value.data);\n                setDataNotFound(false);\n            }\n        });\n    },[tfFactor]);\n\n    useEffect(() => {\n        if (!props.section)\n            return\n        let hash_location = props.section.substring(1, props.section.length);\n        let node = document.getElementById(hash_location)\n        if(node){\n            node.scrollIntoView({\n                block: 'start', \n            })\n        }\n    });\n\n    if (data.length === 0 && dataNotFound) {\n        return (\n            <FlareTxErrorPageComponent/>\n        );\n    }\n\n    let keyArray = [];\n    data.forEach((dat) => {\n        Object.keys(dat).forEach((key) => {\n            if (key !== \"_id\" && key !== \"Family\" && key !== \"Ratings\")\n                keyArray.push(key)\n        });\n    });\n\n    const individualSection = keyArray.map(key => {\n        return (\n            <div id={key} key={key}>\n                <hr className=\"body-component__horizontalLine\"></hr>\n                <div className=\"scroll-component body-component__content\">\n                    <FlareTxInformationSectionComponent id={key} section={data[0][key]} sectionName={key}/>\n                </div>\n            </div>\n        )\n    })\n    return(\n        <div className=\"body-component scroll-component\" id=\"information-container\">\n            {individualSection}\n        </div>            \n    );\n}\n\nexport default FlareTxInformationBodyComponent;","import './FlareTx-Filters-Component.scss';\nimport { Dropdown } from 'primereact/dropdown';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Button } from 'primereact/button';\nimport { VIEWS_FILTER, RATINGS_FILTER } from '../../../../Constants';\nimport { useEffect, useState } from 'react';\n\nconst FlareTxFiltersComponent = (props) => {\n\n    const [selectedViews, setSelectedViews] = useState(null);\n    const [selectedRating, setSelectedRating] = useState(null);\n    const [selectedFamily, setSelectedFamily] = useState(null);\n    const [familyList, setFamilyList] = useState([]);\n\n    const handleViewEvent = (event) => {\n        setSelectedViews(event.value);\n    }\n\n    const handleRatingEvent = (event) => {\n        setSelectedRating(event.value);\n    }\n\n    const handleFamilyFilterEvent = (event) => {\n        setSelectedFamily(event.value);\n    }\n\n    const handleApplyClick = () => {\n        props.filterOnFamilyEventHandler(selectedFamily);\n    }\n\n    const handleResetEvent = () => {\n        setSelectedFamily([]);\n        props.filterOnFamilyEventHandler([]);\n    }\n\n    useEffect(() => {\n        let constructFamilyList = []\n        props.familyList.forEach((familyName) =>{\n            let obj = {label: familyName, value: familyName}\n            constructFamilyList.push(obj);\n        });\n        setFamilyList(constructFamilyList);\n    },[props.familyList])\n\n    return(\n        <>\n            <div className=\"filters-component\">\n                <p className=\"filters-component__header\">Transcription Factors</p>\n                <div className=\"d-flex flex-column  filters-component__filters\">\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <div className=\"p-2\">\n                            <MultiSelect value={selectedFamily} options={familyList} placeholder=\"Family\" onChange={handleFamilyFilterEvent}\n                            filter panelFooterTemplate={\n                                <div>\n                                    <hr/>\n                                    <Button label=\"Apply\" className=\"p-button-outlined p-button-secondary\" onClick={handleApplyClick}/>\n                                    <Button label=\"Clear\" className=\"p-button-danger p-button-text\" onClick={handleResetEvent}/>\n                                </div>  \n                            }/>\n                        </div>\n                        <div className=\"p-2\">\n                            <Dropdown className=\"dropdown-component\" value={selectedRating} options={RATINGS_FILTER} onChange={handleRatingEvent} placeholder=\"Ratings\"/>\n                        </div>\n                        <div className=\"p-2\">\n                            <Dropdown className=\"dropdown-component\" value={selectedViews} onChange={handleViewEvent} options={VIEWS_FILTER} placeholder=\"Views\"/>\n                        </div>\n                        <div className=\"d-flex justify-content-end close-sidebar-component\">\n                            <button onClick={props.toggle}><i className=\"fa fa-caret-left\"></i></button>\n                        </div>\n                    </div>\n                    \n                    <div className=\"d-flex p-2\">\n                        <div className=\"search-component d-flex\">\n                            <input type=\"text\" className=\"search-component__input\" onChange={props.searchHandler} placeholder=\"Search\"/>\n                            <span className=\"fa fa-search search-component__search-icon\"></span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default FlareTxFiltersComponent;","import './FlareTx-TF-Container-Component.scss';\nimport { NavLink } from 'react-router-dom';\n\nconst FlareTxTFContainerComponent = (props) =>  {\n\n    const DisplayTF = props.tfList.map(factor => {\n        const path = `/TranscriptionFactor/${factor}`\n        return(\n                <NavLink to={{\n                            pathname: path,\n                            state: {\n                                expanded: true\n                            }\n                        }} \n                        key={factor} \n                        className=\"link-component\"\n                        activeClassName=\"activeTF\"> \n                        <div className=\"factor-list\">{factor}</div>\n                </NavLink>\n        );\n    });\n\n    return(\n        <div>\n            <div className=\"tf-container__header\">\n                <p>Factors({props.size})</p>\n            </div>\n            <div className=\"tf-container__list d-flex flex-column\">\n                { DisplayTF }\n            </div>  \n        </div>\n    );\n}\n\nexport default FlareTxTFContainerComponent;\n","import './FlareTx-Report-Section-Container-Component.scss';\nimport { NavHashLink } from 'react-router-hash-link';\nimport {REPORT_SUBSECTIONS} from '../../../../Constants';\n\n\nconst FlareTxReportSectionContainerComponent = (props) => {\n    \n    const subsections = []\n    Object.keys(REPORT_SUBSECTIONS).forEach ((key) => {\n        subsections.push(key)\n    })\n\n    const displaySections = subsections.map (subsection => {\n        return (\n            <NavHashLink\n            to={`#${subsection}`}\n            className=\"link-component\"\n            activeClassName=\"activeSubsection\"\n            smooth={true}\n            spy={true} > \n            <div className=\"report-subsection-list\">{REPORT_SUBSECTIONS[subsection]}</div>\n                {/* <p className=\"factor-list\">{REPORT_SUBSECTIONS[subsection]}</p> */}\n            </NavHashLink>\n        );\n    });\n\n    return(\n        <div>\n            <div className=\"report-container__header\">\n                <p>Report Sections</p>\n            </div>\n            <div className=\"report-container__list d-flex flex-column\">\n                { displaySections }\n            </div>  \n        </div>\n    );\n}\n\nexport default FlareTxReportSectionContainerComponent;\n","import './FlareTx-SideDrawer-Component.scss';\nimport {ALL_FACTORS_API} from '../../../Constants'\nimport {BackendService} from '../../../Services/Backend-Service'\nimport { useEffect, useState, useCallback} from 'react';\nimport FlareTxFiltersComponent from './FlareTx-Filters-Component/FlareTx-Filters-Component';\nimport FlareTxTFContainerComponent from './FlareTx-TF-Container-Component/FlareTx-TF-Container-Component';\nimport FlareTxReportSectionContainerComponent from './FlareTx-Report-Section-Container-Component/FlareTx-Report-Section-Container-Component';\n\nconst FlaretxSideDrawerComponent = (props) => {\n\n    const [transcriptionFactorList, setTFList] = useState({});\n    const [displayedTF, setDisplayedTF] = useState([]);\n    const [familyList, setFamilyList] = useState([]);\n\n    const fetchTFList = useCallback(() => {\n        BackendService.getResponse(ALL_FACTORS_API).then((value) =>{\n            let tfList = []\n            let tfWithFamilyList = {}\n            let constructFamilyList = []\n            Object.keys(value.data).forEach((object) =>{\n                Object.keys(value.data[object]).forEach((key) => {\n                    tfList.push(key);\n                    tfWithFamilyList[key] = value.data[object][key].Family;\n                    const family = value.data[object][key].Family;\n                    if (family !== '' && !constructFamilyList.includes(family))\n                        constructFamilyList.push(value.data[object][key].Family);\n                });\n            });\n            setTFList(tfWithFamilyList);\n            setFamilyList(constructFamilyList);\n            setDisplayedTF(tfList);\n        });\n    }, []);\n\n    useEffect(() => {\n        fetchTFList()\n    }, [fetchTFList])\n\n    const searchHandler = (event) => {\n        let searchQery = event.target.value.toLowerCase(),\n            filteredTF = Object.keys(transcriptionFactorList).filter((el) => {\n              let searchValue = el.toLowerCase();\n              return searchValue.indexOf(searchQery) !== -1;\n            })\n        setDisplayedTF(filteredTF);\n    }\n\n    const filterOnFamilyEventHandler = (familyList) => {\n        console.log(familyList, transcriptionFactorList);\n        let filteredTF = [];\n        if (familyList.length === 0) {\n            setDisplayedTF(Object.keys(transcriptionFactorList));\n            return;\n        }\n        Object.keys(transcriptionFactorList).forEach((key) => {\n            if (familyList.includes(transcriptionFactorList[key])) {\n                filteredTF.push(key);\n            }\n        });\n        setDisplayedTF(filteredTF);\n    }\n\n    return(\n        <div className={props.expanded ? \"sidebar sidebar__expanded\" : \"sidebar\"}> \n        {props.expanded? <div className=\"d-flex flex-row\">\n                            <div className=\"d-flex flex-column transcription-factor-panel\">\n                                <div className=\"d-flex\">\n                                     <FlareTxFiltersComponent \n                                     toggle={props.toggle} \n                                     searchHandler={searchHandler} \n                                     familyList={familyList}\n                                     filterOnFamilyEventHandler={filterOnFamilyEventHandler}/>\n                                </div>\n                                <div className=\"d-flex flex-row\">\n                                    <div className=\"tf-container\">\n                                        <FlareTxTFContainerComponent \n                                        size={displayedTF.length} \n                                        tfList={displayedTF} \n                                        expanded={props.expanded}/>\n                                    </div>\n                                    <div className=\"report-container\"> \n                                        <FlareTxReportSectionContainerComponent/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div> \n                    : \n                        <>\n                            <div className=\"open-button-component\">\n                                <button onClick={props.toggle}><i className=\"fa fa-caret-right fa-xs\"></i></button>\n                            </div>\n                        </>\n        }\n        </div>\n    );\n}\n\nexport default FlaretxSideDrawerComponent;","import './FlareTx-Information-Component.scss';\nimport { useParams } from 'react-router';\nimport FlareTxHomePageComponent from '../FlareTx-HomePage-Component/FlareTx-HomePage-Component';\nimport FlareTxInformationHeaderComponent from './FlareTx-Information-Header-Component/FlareTx-Information-Header-Component';\nimport FlareTxInformationBodyComponent from './FlareTx-Information-Body-Component/FlareTx-Information-Body-Component';\nimport FlaretxSideDrawerComponent from './FlareTx-SideDrawer-Component/FlareTx-SideDrawer-Component';\nimport React, { useState, useEffect } from 'react';\n\nconst FlareTxInformationComponent = (props) => {\n\n    let { transcriptionFactor } = useParams();\n\n    const [isTranscriptionFactor, setIsTranscriptionFactor] = useState(true)\n\n    useEffect(() => {\n        if (transcriptionFactor === undefined) {\n            setIsTranscriptionFactor(false);\n        } else {\n            setIsTranscriptionFactor(true);\n        }   \n    },[transcriptionFactor])\n\n    return(\n        <>\n            <FlaretxSideDrawerComponent expanded={props.expanded} toggle={props.toggle}/>\n            {!isTranscriptionFactor ?  <FlareTxHomePageComponent />\n                                :  <div className={props.expanded ? \"main-panel__expanded\" : \"main-panel\"}>\n                                    <div className=\"main-panel__header\">\n                                        <FlareTxInformationHeaderComponent tfName={transcriptionFactor}/>\n                                    </div>\n                                    <div className=\"main-panel__body\" key={transcriptionFactor}>\n                                        <FlareTxInformationBodyComponent transcriptionFactor={transcriptionFactor} section={window.location.hash}/>\n                                    </div>\n                                </div>\n            }\n            \n        </>\n    );\n}\n\nexport default FlareTxInformationComponent;","import './FlareTx-Logo-Component.scss';\n\nconst FlareTxLogoComponent = () => {\n    return(\n        <div className=\"header-component\">\n            <p className=\"header-component__content\">\n                <span className=\"header-component__content__purple\">Flare</span>\n                <span className=\"header-component__content__orange\">Tx</span>\n            </p>\n            \n        </div>\n    );\n}\n\nexport default FlareTxLogoComponent;","export default __webpack_public_path__ + \"static/media/summary.b3343c09.png\";","import './FlareTx-Summary-Component.scss';\nimport summary from '../../Assets/Images/summary.png'\n\nconst FlareTxSummaryComponent = (props) => {\n    return (\n        <div className=\"summary-component\">\n            <img src={summary} alt=\"summary\" />\n        </div>\n    );\n}\n\nexport default FlareTxSummaryComponent;","import './FlareTx-Summary-TF-Panel-Component.scss'\nimport { NavLink } from 'react-router-dom';\n\nconst FlareTxSummaryTFPanelComponent = () => {\n    return(\n        <>\n            <div className=\"summary-panel-component\">\n                <div className=\"list-container d-flex flex-column\">\n                    <NavLink to={{\n                                    pathname: '/summary',\n                                    state: {\n                                        expanded: true\n                                    }\n                                }} \n                            className=\"link-component\"\n                            activeClassName=\"active\"> \n                                <div className=\"list-container__data d-flex flex-row\">\n                                    <div className=\"d-flex\"><i className=\"fa fa-home fa-lg\" aria-hidden=\"true\"></i></div>\n                                    <div className=\"d-flex ms-2\">Summary</div>\n                                </div>\n                    </NavLink>\n                    \n                   \n                        <NavLink to={{\n                                pathname: '/TranscriptionFactor/',\n                                state: {\n                                    expanded: true\n                                }\n                            }} \n                            className=\"link-component\"\n                            activeClassName=\"active\"> \n                             <div className=\"list-container__data\">\n                             Transcription Factor\n                             </div>\n                                \n                        </NavLink>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default FlareTxSummaryTFPanelComponent;","import './App.scss';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport FlareTxInformationComponent from './Components/FlareTx-Information-Component/FlareTx-Information-Component';\nimport FlareTxLogoComponent from './Components/FlareTx-Logo-Component/FlareTx-Logo-Component';\nimport FlareTxSummaryComponent from './Components/FlareTx-Summary-Component/FlareTx-Summary-Component';\nimport FlareTxSummaryTFPanelComponent from './Components/FlareTx-Summary-TF-Panel-Component/FlareTx-Summary-TF-Panel-Component';\nimport FlareTxErrorPageComponent from './Components/FlareTx-ErrorPage-Component/FlareTx-ErrorPage-Component';\nimport { useState } from 'react';\n\nconst App = () => {\n\n  const [expanded, setExpanded] = useState(true)\n\n  const toggleSidebar = () => {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <div>\n      <BrowserRouter basename=\"test-mvp/\">\n        <FlareTxLogoComponent />\n        <div className=\"d-flex flex-row\">\n          <div className=\"d-flex\">\n            { expanded ? <FlareTxSummaryTFPanelComponent /> : <></>}\n          </div>\n          <Switch>\n            <Route exact path=\"/\" render={() => {\n                        return (\n                          <Redirect to=\"/Summary\" />\n                        )}}\n            />\n            <Route path=\"/Summary\" exact component={() => <FlareTxSummaryComponent />} />\n            <Route path=\"/TranscriptionFactor/:transcriptionFactor?\"  component={() => <FlareTxInformationComponent expanded = {expanded} toggle={toggleSidebar}/>} />\n            <Route path=\"*\" component={() => <FlareTxErrorPageComponent expanded = {expanded}/>}/>\n          </Switch> \n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/WorkSans-VariableFont_wght.e7663f1a.ttf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport '../src/Assets/Fonts/WorkSans-VariableFont_wght.ttf';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport '../node_modules/primeicons/primeicons.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}